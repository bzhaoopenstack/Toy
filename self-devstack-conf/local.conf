[[install]]


[[local|localrc]]

#SSL
#USE_SSL=True
#SSL_ENABLED_SERVICES=glance

# Define the devstack install directory
#DEST=/opt/stack/
#Data directory
#DATA_DIR=/opt/stack/data/
#Service dirctory
#SERVICE_DIR=$DEST/service

# No internet
#OFFLINE=True
#Reclone
RECLONE=False

ADMIN_PASSWORD=root
MYSQL_PASSWORD=root
RABBIT_PASSWORD=root
SERVICE_PASSWORD=$ADMIN_PASSWORD

# Using milestone-proposed branches
#CINDER_BRANCH=stable/juno
#GLANCE_BRANCH=stable/juno
#KEYSTONE_BRANCH=stable/juno
#NOVA_BRANCH=stable/juno
#NEUTRON_BRANCH=stable/juno
#CEILOMETER_BRANCH=stable/juno
#HORIZON_BRANCH=stable/juno
#REQUIREMENTS_BRANCH=stable/juno

# ``HOST_IP`` should be set manually for best results if the NIC configuration
# of the host is unusual, i.e. ``eth1`` has the default route but ``eth0`` is the
# public interface.  It is auto-detected in ``stack.sh`` but often is indeterminate
# on later runs due to the IP moving from an Ethernet interface to a bridge on
# the host. Setting it here also makes it available for ``openrc`` to include
# when setting ``OS_AUTH_URL``.
# ``HOST_IP`` is not set by default.
#HOST_IP=w.x.y.z

# Logging
# -------
# By default ``stack.sh`` output only goes to the terminal where it runs.  It can
# be configured to additionally log to a file by setting ``LOGFILE`` to the full
# path of the destination log file.  A timestamp will be appended to the given name.
LOGFILE=$DEST/logs/stack.sh.log
# Old log files are automatically removed after 7 days to keep things neat.  Change
# the number of days by setting ``LOGDAYS``.
LOGDAYS=2
# Nova logs will be colorized if ``SYSLOG`` is not set; turn this off by setting
# ``LOG_COLOR`` false.
#LOG_COLOR=False
#------------------------------------------------------------------------------
# disable all services first if you don't want to install the default services.
# disable_all_services
#------------------------------------------------------------------------------
# Pre-requisite
enable_service rabbit mysql key
#enable_service -mysql postgresql
#------------------------------------------------------------------------------
#Libraries from Git
LIBS_FROM_GIT=python-openstackclient,python-keystoneclient,python-glanceclient
#------------------------------------------------------------------------------
# Keystone
KEYSTONE_TOKEN_FORMAT=fernet
#KEYSTONE_DEPLOY=uwsgi

# OpenLdap, this will create a domain in keystone using openldap as the identity driver.
enable_service ldap
# Federation, this will set the Keystone as Service Provider, and use testshib.org
# as Identity Provider
enable_service keystone-saml2-federation
#------------------------------------------------------------------------------
# Nova
enable_service n-api n-obj n-cpu n-cond n-sch n-schi n-novnc n-cauth
#------------------------------------------------------------------------------
# Cinder
enable_service cinder c-api c-vol c-sch
#------------------------------------------------------------------------------
# Neutron
enable_service q-svc q-agt q-dhcp q-l3 q-meta neutron 

# Dragonflow
#Q_ENABLE_DRAGONFLOW_LOCAL_CONTROLLER=True
#enable_plugin dragonflow https://github.com/openstack/dragonflow.git
#enable_service df-controller
#enable_service db-ext-services
#enable_service q-svc
#enable_service q-l3
#disable_service q-agt
#disable_service n-net

# BGP dynamic routing
#enable_service q-bgp q-bgp-agt
#------------------------------------------------------------------------------
# Glance
enable_service g-api g-reg
#------------------------------------------------------------------------------
# Horizon
enable_service horizon
#------------------------------------------------------------------------------
# Tempest(enabled by default)
#enable_service -tempest
#------------------------------------------------------------------------------
# Heat
#enable_service tempest heat
# Heat - Orchestration Service
#enable_service heat h-api h-api-cfn h-api-cw h-eng
#------------------------------------------------------------------------------
# Swift
# Swift is now used as the back-end for the S3-like object store. If Nova's
# objectstore (``n-obj`` in ``ENABLED_SERVICES``) is enabled, it will NOT
# run if Swift is enabled. Setting the hash value is required and you will
# be prompted for it if Swift is enabled so just set it to something already:
SWIFT_HASH=66a3d6b56c1f479c8b4e70ab5c2000f5
# For development purposes the default of 3 replicas is usually not required.
# Set this to 1 to save some resources:
SWIFT_REPLICAS=1
# The data for Swift is stored by default in (``$DEST/data/swift``),
# or (``$DATA_DIR/swift``) if ``DATA_DIR`` has been set, and can be
# moved by setting ``SWIFT_DATA_DIR``. The directory will be created
# if it does not exist.
SWIFT_DATA_DIR=$DEST/data
#Enable Swift
enable_service s-proxy s-object s-container s-account
#------------------------------------------------------------------------------
#Ceilometer
# Enable the ceilometer metering services
#enable_service ceilometer-acompute ceilometer-acentral ceilometer-anotification ceilometer-collector
# Enable the ceilometer alarming services
#enable_service ceilometer-alarm-evaluator,ceilometer-alarm-notifier
# Enable the ceilometer api services
#enable_service ceilometer-api
#------------------------------------------------------------------------------
# gnocchi
#enable_plugin gnocchi https://github.com/openstack/gnocchi master
#enable_service gnocchi-api
#------------------------------------------------------------------------------
# zaqar
enable_plugin zaqar https://github.com/openstack/zaqar
enable_plugin zaqar-ui https://github.com/openstack/zaqar-ui
